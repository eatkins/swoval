// Do not edit this file manually. It is autogenerated.

package com.swoval.files

import com.swoval.files.PathWatchers.FollowSymlinks
import com.swoval.files.PathWatchers.NoFollowSymlinks
import com.swoval.logging.Logger
import java.io.IOException
import java.util.concurrent.TimeUnit

trait PathWatcherProvider {

  /**
   * Create a PathWatcher that will not follow symlinks. The implementation will be platform
   * dependent.
   *
   * @param logger the logger for t
   * @return a PathWatcher that does not follow symlinks.
   *     an io error
   *     its background threads
   */
  def noFollowSymlinks(logger: Logger): NoFollowSymlinks[PathWatchers.Event]

  /**
   * Create a PathWatcher that will follow symlinks and generate file events for the symlink when
   * its target is modified. The implementation will be platform dependent.
   *
   * @param logger the logger for t
   * @return a PathWatcher that does not follow symlinks.
   *     an io error
   *     its background threads
   */
  def followSymlinks(logger: Logger): FollowSymlinks[PathWatchers.Event]

  /**
   * Create a path watcher that periodically polls the file system to detect changes. It will always
   * follow symlinks.
   *
   * @param pollInterval minimum duration between when polling ends and the next poll begins
   * @param timeUnit the time unit for which the pollInterval corresponds
   * @return the polling path watcher.
   */
  def polling(pollInterval: java.lang.Long,
              timeUnit: TimeUnit,
              logger: Logger): PathWatcher[PathWatchers.Event]

}
