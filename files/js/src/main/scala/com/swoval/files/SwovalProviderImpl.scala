// Do not edit this file manually. It is autogenerated.

package com.swoval.files

import com.swoval.files.FileTreeDataViews.Converter
import com.swoval.files.FileTreeRepositories.FollowSymlinks
import com.swoval.files.FileTreeRepositories.NoFollowSymlinks
import com.swoval.logging.Logger
import java.io.IOException
import SwovalProviderImpl._

object SwovalProviderImpl {

  private val impl: SwovalProvider = load()

  def getDefaultProvider(): SwovalProvider = impl

  private def load(): SwovalProvider = {
    val userDefined: SwovalProvider = SwovalProviderFactory.loadProvider()
    if (userDefined != null) userDefined else new Impl()
  }

  private class Impl extends SwovalProvider {

    val fileTreeRepositoryProvider: FileTreeRepositoryProvider =
      new FileTreeRepositoryProviderImpl()

    override def getDefault(): FileTreeRepository[AnyRef] =
      fileTreeRepositoryProvider.getDefault

    override def followSymlinks[T <: AnyRef](converter: Converter[T],
                                             logger: Logger): FollowSymlinks[T] =
      fileTreeRepositoryProvider.followSymlinks(converter, logger)

    override def noFollowSymlinks[T <: AnyRef](converter: Converter[T],
                                               logger: Logger): NoFollowSymlinks[T] =
      fileTreeRepositoryProvider.noFollowSymlinks(converter, logger)

  }

}

class SwovalProviderImpl extends SwovalProvider {

  override def getDefault(): FileTreeRepository[AnyRef] =
    SwovalProviderImpl.impl.getDefault

  override def followSymlinks[T <: AnyRef](converter: Converter[T],
                                           logger: Logger): FollowSymlinks[T] =
    SwovalProviderImpl.impl.followSymlinks(converter, logger)

  override def noFollowSymlinks[T <: AnyRef](converter: Converter[T],
                                             logger: Logger): NoFollowSymlinks[T] =
    SwovalProviderImpl.impl.noFollowSymlinks(converter, logger)

}
